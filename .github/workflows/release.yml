# .github/workflows/release.yml

name: Python Auto-Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Build and Release
    # We need to grant write permissions to this job so semantic-release can create a release
    permissions:
      contents: write
      issues: write
      pull-requests: write
    runs-on: windows-latest # Use a Windows runner to build the .exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # Specify your project's Python version

      - name: Install project dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller semantic-release

      - name: Build the executable with PyInstaller
        run: |
          # This command bundles all your scripts and assets into a single .exe
          # We use the backtick ` for line continuation in PowerShell.
          pyinstaller --noconfirm --onefile --name "LeagueAutoAccept" `
            --hidden-import "app" `
            --hidden-import "logger" `
            --hidden-import "window" `
            --hidden-import "file_handler" `
            --add-data "config.ini;." `
            --add-data "pic;pic" `
            main.py
        shell: pwsh # Explicitly define the shell as PowerShell

      - name: Create .releaserc.json
        run: |
          # This file configures semantic-release.
          # The "assets" configuration tells it to upload the .exe you just built.
          @"
          {
            "branches": ["main"],
            "plugins": [
              "@semantic-release/commit-analyzer",
              "@semantic-release/release-notes-generator",
              ["@semantic-release/github", {
                "assets": [
                  {"path": "dist/LeagueAutoAccept.exe", "label": "LeagueAutoAccept Installer (Windows)"}
                ]
              }]
            ]
          }
          "@ | Out-File -FilePath .releaserc.json -Encoding utf8
        shell: pwsh

      - name: Run Semantic Release
        # This action automates the entire release process.
        # It reads your commit messages, determines the new version, creates a git tag,
        # generates release notes, and publishes a new GitHub Release with the .exe attached.
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

